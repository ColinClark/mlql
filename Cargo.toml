[workspace]
resolver = "2"
members = [
    "crates/mlql-ast",
    "crates/mlql-ir",
    "crates/mlql-registry",
    "crates/mlql-duck",
    "crates/mlql-server",
]
# Exclude duckdb-local - it's a separate workspace with its own Cargo.toml
exclude = ["crates/duckdb-local"]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/yourusername/mlql-rs"
rust-version = "1.75"
authors = ["MLQL Contributors"]
homepage = "https://github.com/yourusername/mlql-rs"

[workspace.dependencies]
# Parsing
pest = "2.7"
pest_derive = "2.7"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Database
# Using DuckDB 1.4 - using system-installed library for faster builds
duckdb = "1.4"
arrow = "56"

# Substrait
substrait = { version = "0.61", features = ["serde"] }
prost = "0.14"

# Async runtime (for server)
tokio = { version = "1", features = ["full"] }
axum = { version = "0.7" }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Logging/Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt"] }
tracing-appender = "0.2"

# Observability
prometheus = "0.13"

# Utilities
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
sha2 = "0.10"

# Configuration
serde_yaml = "0.9"
config = "0.14"

# LLM Integration
async-openai = "0.28"
dotenvy = "0.15"

# MCP (Model Context Protocol)
rust-mcp-sdk = "0.7"
rust-mcp-schema = "0.7"
async-trait = "0.1"

[profile.release]
lto = true
codegen-units = 1
opt-level = 3
